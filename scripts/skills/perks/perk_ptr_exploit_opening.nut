this.perk_ptr_exploit_opening <- this.inherit("scripts/skills/skill", {
	m = {},
	function create()
	{
		this.m.ID = "perk.ptr_exploit_opening";
		this.m.Name = this.Const.Strings.PerkName.PTRExploitOpening;
		this.m.Description = this.Const.Strings.PerkDescription.PTRExploitOpening;
		this.m.Icon = "ui/perks/ptr_exploit_opening.png";
		this.m.Type = this.Const.SkillType.Perk;
		this.m.Order = this.Const.SkillOrder.Perk;
		this.m.IsActive = false;
		this.m.IsStacking = false;
		this.m.IsHidden = false;
	}

	function onMissed( _attacker, _skill )
	{
		if (_skill == null || !_skill.isAttack() || _skill.isRanged() || _attacker.isAlliedWith(this.getContainer().getActor()))
		{
			return;
		}

		local attackerEffect = _attacker.getSkills().hasSkill("effects.ptr_exploitable_opening");
		if (attackerEffect == null)
		{
			local effect = this.new("scripts/skills/effects/ptr_exploitable_opening_effect");
			effect.addOpponent(this.getContainer().getActor());
			_attacker.getSkills().add(effect);
		}
		else
		{
			attackerEffect.addOpponent(this.getContainer().getActor());
		}
	}
});
